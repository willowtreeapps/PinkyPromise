{"Structs/Promise.html#/s:12PinkyPromise0B0V8Observera":{"name":"Observer","abstract":"<p>A completion function for the task wrapped by a promise.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V4Taska":{"name":"Task","abstract":"<p>A function representing the work to be done by a promise. A task must eventually call its given observer function exactly once.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V4taskACyxGyys6ResultOyxs5Error_pGcc_tcfc":{"name":"init(task:)","abstract":"<p>Creates a promise that produces its result by running a given asynchronous task.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V6resultACyxGs6ResultOyxs5Error_pG_tcfc":{"name":"init(result:)","abstract":"<p>Creates a promise that, when called, immediately produces a given result.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V5valueACyxGx_tcfc":{"name":"init(value:)","abstract":"<p>Creates a promise that, when called, immediately succeeds with a given value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V5errorACyxGs5Error_p_tcfc":{"name":"init(error:)","abstract":"<p>Creates a promise that, when called, immediately fails with a given error.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V4liftyACyxGxyKcFZ":{"name":"lift(_:)","abstract":"<p>Creates a promise that, when called, immediately produces its result from a given function.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V3mapyACyqd__Gqd__xclF":{"name":"map(_:)","abstract":"<p>Creates a promise that wraps this promise and transforms its success value to a new success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V6tryMapyACyqd__Gqd__xKclF":{"name":"tryMap(_:)","abstract":"<p>Creates a promise that wraps this promise and runs a second failable task with its success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V7flatMapyACyqd__GAExclF":{"name":"flatMap(_:)","abstract":"<p>Creates a promise that wraps this promise and runs a second failable task with its success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V7recoveryACyxGAEs5Error_pcF":{"name":"recover(_:)","abstract":"<p>Creates a promise that wraps this promise and runs a second failable task with its error.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V5retry12attemptCountACyxGSi_tF":{"name":"retry(attemptCount:)","abstract":"<p>Creates a promise that wraps this promise and repeatedly runs it until it succeeds, up to a maximum number of runs.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V12inBackgroundACyxGyF":{"name":"inBackground()","abstract":"<p>Creates a promise that wraps this promise and runs it on a background queue.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V15inDispatchGroupyACyxGSo17OS_dispatch_groupCF":{"name":"inDispatchGroup(_:)","abstract":"<p>Creates a promise that wraps this promise and runs it while participating in a dispatch group.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V8onResultyACyxGys0D0Oyxs5Error_pGcF":{"name":"onResult(_:)","abstract":"<p>Creates a promise that wraps this promise and performs a secondary task with its result.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V9onSuccessyACyxGyxcF":{"name":"onSuccess(_:)","abstract":"<p>Creates a promise that wraps this promise and performs a secondary task with its success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V9onFailureyACyxGys5Error_pcF":{"name":"onFailure(_:)","abstract":"<p>Creates a promise that wraps this promise and performs a secondary task with its error.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V4call10completionyys6ResultOyxs5Error_pGcSg_tF":{"name":"call(completion:)","abstract":"<p>Performs work defined by the promise and eventually produces the promise&rsquo;s value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:12PinkyPromise0B0V7enqueue2inyAA0B5QueueCyxG_tF":{"name":"enqueue(in:)","abstract":"<p>Adds a promise to a queue.</p>","parent_name":"Promise"},"Structs/Promise.html":{"name":"Promise","abstract":"<p>A transformable, repeatable, failable asynchronous task.</p>"},"Functions.html#/s:12PinkyPromise3zipyAA0B0Vyx_q_tGADyxG_ADyq_Gtr0_lF":{"name":"zip(_:_:)","abstract":"<p>Creates a promise that runs two promises simultaneously and unifies their results.</p>"},"Functions.html#/s:12PinkyPromise3zipyAA0B0Vyx_q_q0_tGADyxG_ADyq_GADyq0_Gtr1_lF":{"name":"zip(_:_:_:)","abstract":"<p>Creates a promise that runs three promises simultaneously and unifies their results.</p>"},"Functions.html#/s:12PinkyPromise3zipyAA0B0Vyx_q_q0_q1_tGADyxG_ADyq_GADyq0_GADyq1_Gtr2_lF":{"name":"zip(_:_:_:_:)","abstract":"<p>Creates a promise that runs four promises simultaneously and unifies their results.</p>"},"Functions.html#/s:12PinkyPromise8zipArrayyAA0B0VySayxGGSayADyxGGlF":{"name":"zipArray(_:)","abstract":"<p>Creates a promise that runs an array of promises simultaneously and unifies their results.</p>"},"Functions.html#/s:12PinkyPromise3zipys6ResultOyx_q_ts5Error_pGADyxsAE_pG_ADyq_sAE_pGtr0_lF":{"name":"zip(_:_:)","abstract":"<p>From two results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:12PinkyPromise3zipys6ResultOyx_q_q0_ts5Error_pGADyxsAE_pG_ADyq_sAE_pGADyq0_sAE_pGtr1_lF":{"name":"zip(_:_:_:)","abstract":"<p>From three results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:12PinkyPromise3zipys6ResultOyx_q_q0_q1_ts5Error_pGADyxsAE_pG_ADyq_sAE_pGADyq0_sAE_pGADyq1_sAE_pGtr2_lF":{"name":"zip(_:_:_:_:)","abstract":"<p>From four results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:12PinkyPromise8zipArrayys6ResultOySayxGs5Error_pGSayADyxsAF_pGGlF":{"name":"zipArray(_:)","abstract":"<p>From an array of results, returns one result wrapping all their values or the first error.</p>"},"Extensions/Result.html#/s:s6ResultO12PinkyPromises5Error_pRs_rlE6tryMapyAByqd__sAD_pGqd__xKXElF":{"name":"tryMap(_:)","abstract":"<p>Transforms a success value into a new successful or failed result.</p>","parent_name":"Result"},"Extensions/Result.html":{"name":"Result"},"Classes/PromiseQueue.html#/s:12PinkyPromise0B5QueueCACyxGycfc":{"name":"init()","abstract":"<p>Creates a queue.</p>","parent_name":"PromiseQueue"},"Classes/PromiseQueue.html#/s:12PinkyPromise0B5QueueC5batch8promisesAA0B0VySayxGGSayAGyxGG_tF":{"name":"batch(promises:)","abstract":"<p>Creates a promise that enqueues an array of promises and unifies their results.</p>","parent_name":"PromiseQueue"},"Classes/PromiseQueue.html":{"name":"PromiseQueue","abstract":"<p>A simple queue that runs one Promise at a time in the order they&rsquo;re added.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}